{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 44,
   "id": "b2a663b5",
   "metadata": {},
   "outputs": [],
   "source": [
    "import requests\n",
    "import pandas as pd\n",
    "import os \n",
    "import json\n",
    "import http.client\n",
    "import time"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "id": "f511a6cf",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>name</th>\n",
       "      <th>type</th>\n",
       "      <th>country_name</th>\n",
       "      <th>country_code</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>4</td>\n",
       "      <td>Euro Championship</td>\n",
       "      <td>Cup</td>\n",
       "      <td>World</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>21</td>\n",
       "      <td>Confederations Cup</td>\n",
       "      <td>Cup</td>\n",
       "      <td>World</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>61</td>\n",
       "      <td>Ligue 1</td>\n",
       "      <td>League</td>\n",
       "      <td>France</td>\n",
       "      <td>FR</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>144</td>\n",
       "      <td>Jupiler Pro League</td>\n",
       "      <td>League</td>\n",
       "      <td>Belgium</td>\n",
       "      <td>BE</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>71</td>\n",
       "      <td>Serie A</td>\n",
       "      <td>League</td>\n",
       "      <td>Brazil</td>\n",
       "      <td>BR</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>920</th>\n",
       "      <td>906</td>\n",
       "      <td>Reserve League</td>\n",
       "      <td>League</td>\n",
       "      <td>Argentina</td>\n",
       "      <td>AR</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>921</th>\n",
       "      <td>907</td>\n",
       "      <td>Primera Division</td>\n",
       "      <td>League</td>\n",
       "      <td>Cuba</td>\n",
       "      <td>CU</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>922</th>\n",
       "      <td>908</td>\n",
       "      <td>AFF U23 Championship</td>\n",
       "      <td>Cup</td>\n",
       "      <td>World</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>923</th>\n",
       "      <td>909</td>\n",
       "      <td>MLS Next Pro</td>\n",
       "      <td>League</td>\n",
       "      <td>USA</td>\n",
       "      <td>US</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>924</th>\n",
       "      <td>850</td>\n",
       "      <td>UEFA U21 Championship - Qualification</td>\n",
       "      <td>Cup</td>\n",
       "      <td>World</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>925 rows Ã— 5 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      id                                   name    type country_name  \\\n",
       "0      4                      Euro Championship     Cup        World   \n",
       "1     21                     Confederations Cup     Cup        World   \n",
       "2     61                                Ligue 1  League       France   \n",
       "3    144                     Jupiler Pro League  League      Belgium   \n",
       "4     71                                Serie A  League       Brazil   \n",
       "..   ...                                    ...     ...          ...   \n",
       "920  906                         Reserve League  League    Argentina   \n",
       "921  907                       Primera Division  League         Cuba   \n",
       "922  908                   AFF U23 Championship     Cup        World   \n",
       "923  909                           MLS Next Pro  League          USA   \n",
       "924  850  UEFA U21 Championship - Qualification     Cup        World   \n",
       "\n",
       "    country_code  \n",
       "0           None  \n",
       "1           None  \n",
       "2             FR  \n",
       "3             BE  \n",
       "4             BR  \n",
       "..           ...  \n",
       "920           AR  \n",
       "921           CU  \n",
       "922         None  \n",
       "923           US  \n",
       "924         None  \n",
       "\n",
       "[925 rows x 5 columns]"
      ]
     },
     "execution_count": 46,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# request league data\n",
    "\n",
    "url = \"https://v3.football.api-sports.io/leagues\"\n",
    "\n",
    "payload={}\n",
    "headers = {\n",
    "  'x-rapidapi-key': 'a9cc039ebd059e2c63f6a40d741e82a8',\n",
    "  'x-rapidapi-host': 'v3.football.api-sports.io'\n",
    "}\n",
    "\n",
    "response_leagues = requests.request(\"GET\", url, headers=headers, data=payload)\n",
    "\n",
    "json_leagues = response_leagues.json()\n",
    "df = pd.DataFrame(json_leagues['response'])\n",
    "\n",
    "df_leagues = pd.DataFrame(df.loc[:,'league'].values.tolist()).iloc[:,0:3]\n",
    "\n",
    "df_country = pd.DataFrame(df.loc[:,'country'].values.tolist()).iloc[:,0:2]\n",
    "df_country = df_country.rename(columns={'name':'country_name', 'code':'country_code'})\n",
    "\n",
    "df_leagues = pd.concat([df_leagues, df_country], axis=1)\n",
    "df_leagues"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "id": "c8608458",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "England :  True\n",
      "Spain :  True\n",
      "Germany :  True\n",
      "Italy :  True\n",
      "France :  True\n",
      "Portugal :  True\n",
      "Netherlands :  True\n",
      "Austria :  True\n",
      "Scotland :  True\n",
      "Russia :  True\n"
     ]
    }
   ],
   "source": [
    "# top five and next five countries according to UEFA country coefficients\n",
    "\n",
    "top_five = ['England', 'Spain', 'Germany', 'Italy', 'France']\n",
    "next_five = ['Portugal', 'Netherlands', 'Austria', 'Scotland', 'Russia']\n",
    "\n",
    "for country in top_five:\n",
    "    print(country, ': ', country in set(df_leagues['country_name'].values))\n",
    "    \n",
    "for country in next_five:\n",
    "    print(country, ': ', country in set(df_leagues['country_name'].values))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "id": "fcef8ea5",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>name</th>\n",
       "      <th>type</th>\n",
       "      <th>country_name</th>\n",
       "      <th>country_code</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>39</td>\n",
       "      <td>Premier League</td>\n",
       "      <td>League</td>\n",
       "      <td>England</td>\n",
       "      <td>GB</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>110</th>\n",
       "      <td>40</td>\n",
       "      <td>Championship</td>\n",
       "      <td>League</td>\n",
       "      <td>England</td>\n",
       "      <td>GB</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>140</td>\n",
       "      <td>La Liga</td>\n",
       "      <td>League</td>\n",
       "      <td>Spain</td>\n",
       "      <td>ES</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>253</th>\n",
       "      <td>141</td>\n",
       "      <td>Segunda Division</td>\n",
       "      <td>League</td>\n",
       "      <td>Spain</td>\n",
       "      <td>ES</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>78</td>\n",
       "      <td>Bundesliga 1</td>\n",
       "      <td>League</td>\n",
       "      <td>Germany</td>\n",
       "      <td>DE</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>60</th>\n",
       "      <td>79</td>\n",
       "      <td>Bundesliga 2</td>\n",
       "      <td>League</td>\n",
       "      <td>Germany</td>\n",
       "      <td>DE</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>135</td>\n",
       "      <td>Serie A</td>\n",
       "      <td>League</td>\n",
       "      <td>Italy</td>\n",
       "      <td>IT</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>254</th>\n",
       "      <td>136</td>\n",
       "      <td>Serie B</td>\n",
       "      <td>League</td>\n",
       "      <td>Italy</td>\n",
       "      <td>IT</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>61</td>\n",
       "      <td>Ligue 1</td>\n",
       "      <td>League</td>\n",
       "      <td>France</td>\n",
       "      <td>FR</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>62</td>\n",
       "      <td>Ligue 2</td>\n",
       "      <td>League</td>\n",
       "      <td>France</td>\n",
       "      <td>FR</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>94</td>\n",
       "      <td>Primeira Liga</td>\n",
       "      <td>League</td>\n",
       "      <td>Portugal</td>\n",
       "      <td>PT</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>88</td>\n",
       "      <td>Eredivisie</td>\n",
       "      <td>League</td>\n",
       "      <td>Netherlands</td>\n",
       "      <td>NL</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>79</th>\n",
       "      <td>219</td>\n",
       "      <td>Erste Liga</td>\n",
       "      <td>League</td>\n",
       "      <td>Austria</td>\n",
       "      <td>AT</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>179</td>\n",
       "      <td>Premiership</td>\n",
       "      <td>League</td>\n",
       "      <td>Scotland</td>\n",
       "      <td>GB</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>266</th>\n",
       "      <td>235</td>\n",
       "      <td>Premier League</td>\n",
       "      <td>League</td>\n",
       "      <td>Russia</td>\n",
       "      <td>RU</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      id              name    type country_name country_code\n",
       "5     39    Premier League  League      England           GB\n",
       "110   40      Championship  League      England           GB\n",
       "10   140           La Liga  League        Spain           ES\n",
       "253  141  Segunda Division  League        Spain           ES\n",
       "6     78      Bundesliga 1  League      Germany           DE\n",
       "60    79      Bundesliga 2  League      Germany           DE\n",
       "7    135           Serie A  League        Italy           IT\n",
       "254  136           Serie B  League        Italy           IT\n",
       "2     61           Ligue 1  League       France           FR\n",
       "16    62           Ligue 2  League       France           FR\n",
       "9     94     Primeira Liga  League     Portugal           PT\n",
       "8     88        Eredivisie  League  Netherlands           NL\n",
       "79   219        Erste Liga  League      Austria           AT\n",
       "11   179       Premiership  League     Scotland           GB\n",
       "266  235    Premier League  League       Russia           RU"
      ]
     },
     "execution_count": 49,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "leagues_temp = pd.DataFrame()\n",
    "\n",
    "# adding two top-tier leagues from top five countries\n",
    "for country in top_five:\n",
    "    top_2_leagues = df_leagues[(df_leagues['country_name'] == country) & (df_leagues['type'] == 'League')].iloc[0:2]\n",
    "    leagues_temp = leagues_temp.append(top_2_leagues)\n",
    "\n",
    "# adding one top tier league from the rest of five countries\n",
    "for country in next_five:\n",
    "    top_league = df_leagues[(df_leagues['country_name'] == country) & (df_leagues['type'] == 'League')].iloc[0:1]\n",
    "    leagues_temp = leagues_temp.append(top_league)\n",
    "\n",
    "df_leagues = leagues_temp\n",
    "df_leagues"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "dd28ae68",
   "metadata": {},
   "outputs": [],
   "source": [
    "df_leagues.to_csv('C:/coding/Python/practice/football_analysis/2nd analysis - underestimated players/leagues.csv', index=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "id": "67777586",
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "\n",
    "fixtures_goal = pd.DataFrame()\n",
    "league_list = df_leagues['id'].values.tolist()\n",
    "\n",
    "for league in league_list:\n",
    "    \n",
    "    # 'URL' + '?' + 'query parameter'\n",
    "    # use '&' to add multiple queries\n",
    "    url_fixture = \"https://v3.football.api-sports.io/fixtures?league={}&season=2021\".format(league)\n",
    "\n",
    "    payload={}\n",
    "    headers = {\n",
    "      'x-rapidapi-key': 'a9cc039ebd059e2c63f6a40d741e82a8',\n",
    "      'x-rapidapi-host': 'v3.football.api-sports.io'\n",
    "    }\n",
    "\n",
    "    response_fixtures = requests.request(\"GET\", url_fixture, headers=headers, data=payload)\n",
    "\n",
    "    json_fixtures = response_fixtures.json()\n",
    "    df_fixtures = pd.DataFrame(json_fixtures['response'])\n",
    "\n",
    "    fixture_id = pd.DataFrame(df_fixtures.loc[:,'fixture'].values.tolist())\n",
    "    fixture_id = fixture_id[['id']]\n",
    "    fixture_id['league_id'] = league\n",
    "    fixture_id = fixture_id.rename(columns={'id':'fixture_id'})\n",
    "\n",
    "    fixture_teams = pd.DataFrame(df_fixtures.loc[:,'teams'].values.tolist())\n",
    "\n",
    "    fixture_teams_home = pd.DataFrame(fixture_teams['home'].values.tolist())\n",
    "    fixture_teams_home = fixture_teams_home[['id','name']]\n",
    "    fixture_teams_home = fixture_teams_home.rename(columns={'id':'home_id','name':'home_name'})\n",
    "\n",
    "    fixture_teams_away = pd.DataFrame(fixture_teams['away'].values.tolist())\n",
    "    fixture_teams_away = fixture_teams_away[['id','name']]\n",
    "    fixture_teams_away = fixture_teams_away.rename(columns={'id':'away_id','name':'away_name'})\n",
    "\n",
    "    fixture_goals = pd.DataFrame(df_fixtures.loc[:,'goals'].values.tolist())\n",
    "    fixture_goals = fixture_goals.rename(columns={'home':'home_goals','away':'away_goals'})\n",
    "\n",
    "    df_fixtures = pd.concat([fixture_id, fixture_teams_home, fixture_teams_away, fixture_goals], axis=1)\n",
    "\n",
    "    fixtures_goal = fixtures_goal.append(df_fixtures)\n",
    "    \n",
    "    \n",
    "# use parameter encoding='utf-8-sig' to be able to display letters with accents etc with no error\n",
    "fixtures_goal.to_csv('C:/coding/Python/practice/football_analysis/2nd analysis - underestimated players/fixtures_goal.csv', index=False, encoding='utf-8-sig')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "id": "558fcc10",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "5287"
      ]
     },
     "execution_count": 51,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(fixtures_goal['fixture_id'].values.tolist())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "id": "9578268d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>fixture_id</th>\n",
       "      <th>league_id</th>\n",
       "      <th>home_id</th>\n",
       "      <th>home_name</th>\n",
       "      <th>away_id</th>\n",
       "      <th>away_name</th>\n",
       "      <th>home_goals</th>\n",
       "      <th>away_goals</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>710556</td>\n",
       "      <td>39</td>\n",
       "      <td>55</td>\n",
       "      <td>Brentford</td>\n",
       "      <td>42</td>\n",
       "      <td>Arsenal</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>710557</td>\n",
       "      <td>39</td>\n",
       "      <td>44</td>\n",
       "      <td>Burnley</td>\n",
       "      <td>51</td>\n",
       "      <td>Brighton</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>710558</td>\n",
       "      <td>39</td>\n",
       "      <td>49</td>\n",
       "      <td>Chelsea</td>\n",
       "      <td>52</td>\n",
       "      <td>Crystal Palace</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>710559</td>\n",
       "      <td>39</td>\n",
       "      <td>45</td>\n",
       "      <td>Everton</td>\n",
       "      <td>41</td>\n",
       "      <td>Southampton</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>710560</td>\n",
       "      <td>39</td>\n",
       "      <td>46</td>\n",
       "      <td>Leicester</td>\n",
       "      <td>39</td>\n",
       "      <td>Wolves</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>239</th>\n",
       "      <td>711535</td>\n",
       "      <td>235</td>\n",
       "      <td>1994</td>\n",
       "      <td>Khimki</td>\n",
       "      <td>558</td>\n",
       "      <td>Spartak Moscow</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>240</th>\n",
       "      <td>862967</td>\n",
       "      <td>235</td>\n",
       "      <td>1087</td>\n",
       "      <td>Ska-khabarovsk</td>\n",
       "      <td>1994</td>\n",
       "      <td>Khimki</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>241</th>\n",
       "      <td>862968</td>\n",
       "      <td>235</td>\n",
       "      <td>1994</td>\n",
       "      <td>Khimki</td>\n",
       "      <td>1087</td>\n",
       "      <td>Ska-khabarovsk</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>242</th>\n",
       "      <td>862969</td>\n",
       "      <td>235</td>\n",
       "      <td>1080</td>\n",
       "      <td>Orenburg</td>\n",
       "      <td>1078</td>\n",
       "      <td>FC UFA</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>243</th>\n",
       "      <td>862970</td>\n",
       "      <td>235</td>\n",
       "      <td>1078</td>\n",
       "      <td>FC UFA</td>\n",
       "      <td>1080</td>\n",
       "      <td>Orenburg</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5287 rows Ã— 8 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     fixture_id  league_id  home_id       home_name  away_id       away_name  \\\n",
       "0        710556         39       55       Brentford       42         Arsenal   \n",
       "1        710557         39       44         Burnley       51        Brighton   \n",
       "2        710558         39       49         Chelsea       52  Crystal Palace   \n",
       "3        710559         39       45         Everton       41     Southampton   \n",
       "4        710560         39       46       Leicester       39          Wolves   \n",
       "..          ...        ...      ...             ...      ...             ...   \n",
       "239      711535        235     1994          Khimki      558  Spartak Moscow   \n",
       "240      862967        235     1087  Ska-khabarovsk     1994          Khimki   \n",
       "241      862968        235     1994          Khimki     1087  Ska-khabarovsk   \n",
       "242      862969        235     1080        Orenburg     1078          FC UFA   \n",
       "243      862970        235     1078          FC UFA     1080        Orenburg   \n",
       "\n",
       "     home_goals  away_goals  \n",
       "0             2           0  \n",
       "1             1           2  \n",
       "2             3           0  \n",
       "3             3           1  \n",
       "4             1           0  \n",
       "..          ...         ...  \n",
       "239           2           1  \n",
       "240           1           0  \n",
       "241           3           0  \n",
       "242           2           2  \n",
       "243           1           2  \n",
       "\n",
       "[5287 rows x 8 columns]"
      ]
     },
     "execution_count": 52,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "fixtures_goal"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "id": "44aab5a8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>fixture_id</th>\n",
       "      <th>team_id</th>\n",
       "      <th>team_name</th>\n",
       "      <th>form</th>\n",
       "      <th>att</th>\n",
       "      <th>def</th>\n",
       "      <th>poisson_distribution</th>\n",
       "      <th>h2h</th>\n",
       "      <th>goals</th>\n",
       "      <th>total</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>710556</td>\n",
       "      <td>55</td>\n",
       "      <td>Brentford</td>\n",
       "      <td>0%</td>\n",
       "      <td>0%</td>\n",
       "      <td>0%</td>\n",
       "      <td>0%</td>\n",
       "      <td>0%</td>\n",
       "      <td>25%</td>\n",
       "      <td>25.0%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>710556</td>\n",
       "      <td>42</td>\n",
       "      <td>Arsenal</td>\n",
       "      <td>0%</td>\n",
       "      <td>0%</td>\n",
       "      <td>0%</td>\n",
       "      <td>0%</td>\n",
       "      <td>100%</td>\n",
       "      <td>75%</td>\n",
       "      <td>75.0%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>710557</td>\n",
       "      <td>44</td>\n",
       "      <td>Burnley</td>\n",
       "      <td>0%</td>\n",
       "      <td>0%</td>\n",
       "      <td>0%</td>\n",
       "      <td>0%</td>\n",
       "      <td>50%</td>\n",
       "      <td>55%</td>\n",
       "      <td>52.5%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>710557</td>\n",
       "      <td>51</td>\n",
       "      <td>Brighton</td>\n",
       "      <td>0%</td>\n",
       "      <td>0%</td>\n",
       "      <td>0%</td>\n",
       "      <td>0%</td>\n",
       "      <td>50%</td>\n",
       "      <td>45%</td>\n",
       "      <td>47.5%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>710558</td>\n",
       "      <td>49</td>\n",
       "      <td>Chelsea</td>\n",
       "      <td>0%</td>\n",
       "      <td>0%</td>\n",
       "      <td>0%</td>\n",
       "      <td>0%</td>\n",
       "      <td>100%</td>\n",
       "      <td>82%</td>\n",
       "      <td>82.0%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>862968</td>\n",
       "      <td>1087</td>\n",
       "      <td>Ska-khabarovsk</td>\n",
       "      <td>43%</td>\n",
       "      <td>20%</td>\n",
       "      <td>100%</td>\n",
       "      <td>0%</td>\n",
       "      <td>50%</td>\n",
       "      <td>50%</td>\n",
       "      <td>40.8%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>862969</td>\n",
       "      <td>1080</td>\n",
       "      <td>Orenburg</td>\n",
       "      <td>0%</td>\n",
       "      <td>0%</td>\n",
       "      <td>100%</td>\n",
       "      <td>0%</td>\n",
       "      <td>71%</td>\n",
       "      <td>55%</td>\n",
       "      <td>63.0%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>862969</td>\n",
       "      <td>1078</td>\n",
       "      <td>FC UFA</td>\n",
       "      <td>100%</td>\n",
       "      <td>100%</td>\n",
       "      <td>0%</td>\n",
       "      <td>0%</td>\n",
       "      <td>29%</td>\n",
       "      <td>45%</td>\n",
       "      <td>37.0%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>862970</td>\n",
       "      <td>1078</td>\n",
       "      <td>FC UFA</td>\n",
       "      <td>90%</td>\n",
       "      <td>78%</td>\n",
       "      <td>29%</td>\n",
       "      <td>0%</td>\n",
       "      <td>38%</td>\n",
       "      <td>50%</td>\n",
       "      <td>57.0%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>862970</td>\n",
       "      <td>1080</td>\n",
       "      <td>Orenburg</td>\n",
       "      <td>10%</td>\n",
       "      <td>22%</td>\n",
       "      <td>71%</td>\n",
       "      <td>0%</td>\n",
       "      <td>62%</td>\n",
       "      <td>50%</td>\n",
       "      <td>43.0%</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>10574 rows Ã— 10 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "    fixture_id  team_id       team_name  form   att   def  \\\n",
       "0       710556       55       Brentford    0%    0%    0%   \n",
       "0       710556       42         Arsenal    0%    0%    0%   \n",
       "0       710557       44         Burnley    0%    0%    0%   \n",
       "0       710557       51        Brighton    0%    0%    0%   \n",
       "0       710558       49         Chelsea    0%    0%    0%   \n",
       "..         ...      ...             ...   ...   ...   ...   \n",
       "0       862968     1087  Ska-khabarovsk   43%   20%  100%   \n",
       "0       862969     1080        Orenburg    0%    0%  100%   \n",
       "0       862969     1078          FC UFA  100%  100%    0%   \n",
       "0       862970     1078          FC UFA   90%   78%   29%   \n",
       "0       862970     1080        Orenburg   10%   22%   71%   \n",
       "\n",
       "   poisson_distribution   h2h goals  total  \n",
       "0                    0%    0%   25%  25.0%  \n",
       "0                    0%  100%   75%  75.0%  \n",
       "0                    0%   50%   55%  52.5%  \n",
       "0                    0%   50%   45%  47.5%  \n",
       "0                    0%  100%   82%  82.0%  \n",
       "..                  ...   ...   ...    ...  \n",
       "0                    0%   50%   50%  40.8%  \n",
       "0                    0%   71%   55%  63.0%  \n",
       "0                    0%   29%   45%  37.0%  \n",
       "0                    0%   38%   50%  57.0%  \n",
       "0                    0%   62%   50%  43.0%  \n",
       "\n",
       "[10574 rows x 10 columns]"
      ]
     },
     "execution_count": 56,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# prediction data\n",
    "\n",
    "fixture_id_list = fixtures_goal['fixture_id'].values.tolist()\n",
    "# fixture_id_list = [719472, 719473]\n",
    "\n",
    "pred_criteria = ['form', 'att', 'def', 'poisson_distribution', 'h2h', 'goals', 'total']\n",
    "fixtures_prediction = pd.DataFrame()\n",
    "\n",
    "for fixture in fixture_id_list:\n",
    "    \n",
    "    conn_pred = http.client.HTTPSConnection(\"v3.football.api-sports.io\")\n",
    "\n",
    "    headers_pred = {\n",
    "        'x-rapidapi-host': \"v3.football.api-sports.io\",\n",
    "        'x-rapidapi-key': \"a9cc039ebd059e2c63f6a40d741e82a8\"\n",
    "        }\n",
    "\n",
    "    conn_pred.request(\"GET\", \"/predictions?fixture={}\".format(fixture), headers=headers_pred)\n",
    "\n",
    "    res_pred = conn_pred.getresponse()\n",
    "    data_pred = res_pred.read()\n",
    "\n",
    "    json_pred = json.loads(data_pred.decode(\"utf-8\"))\n",
    "    df_pred = pd.DataFrame(json_pred['response'])\n",
    "    \n",
    "    # temporary dictionary to keep the data until the data gets appended to the final prediction dataframe\n",
    "    pred_data = {'home': [], 'away': []}\n",
    "    \n",
    "    for team in ['home', 'away']:    \n",
    "        \n",
    "        team_id = df_pred['teams'][0][team]['id']\n",
    "        team_name = df_pred['teams'][0][team]['name']\n",
    "        \n",
    "        for criteria in pred_criteria:\n",
    "            \n",
    "            # keep each data in the temporary dictionary above by home and away\n",
    "            pred_data[team].append(df_pred['comparison'][0][criteria][team])\n",
    "        \n",
    "        # gather the team info and prediction data altogether and append them to the final prediction dataframe\n",
    "        fixtures_prediction = fixtures_prediction.append(pd.concat(\n",
    "            [\n",
    "                pd.DataFrame(\n",
    "                    [[fixture, team_id, team_name]],\n",
    "                    columns=['fixture_id', 'team_id', 'team_name']),\n",
    "                pd.DataFrame(\n",
    "                    [pred_data[team]],\n",
    "                    columns=pred_criteria)\n",
    "            ], axis=1))\n",
    "\n",
    "# use parameter encoding='utf-8-sig' to be able to display letters with accents etc with no error\n",
    "fixtures_prediction.to_csv('C:/coding/Python/practice/football_analysis/2nd analysis - underestimated players/fixtures_prediction.csv', index=False, encoding='utf-8-sig')\n",
    "fixtures_prediction"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "id": "ad4eebde",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "fixtures with no data (max. no printed: 10): \n",
      "862066\n",
      "862298\n",
      "717925\n",
      "717926\n",
      "717927\n",
      "717928\n",
      "717929\n",
      "717930\n",
      "717932\n",
      "717934\n",
      "'player_stats_total' and 'key_error_fixtures' complete\n",
      "number of fixtures with no data:  218\n",
      "--- 13600.980523347855 seconds ---\n"
     ]
    }
   ],
   "source": [
    "# get each player's stats for each fixtures\n",
    "\n",
    "start_time = time.time()\n",
    "\n",
    "fixture_id_list = fixtures_goal['fixture_id'].values.tolist()\n",
    "\n",
    "player_stats_total = pd.DataFrame()\n",
    "\n",
    "# fixtures that have no player stats data cause KeyError\n",
    "key_error_fixtures = pd.DataFrame()\n",
    "\n",
    "print('fixtures with no data (max. no printed: 10): ')\n",
    "\n",
    "# select a fixture\n",
    "for fixture in fixture_id_list:\n",
    "        \n",
    "    conn = http.client.HTTPSConnection(\"v3.football.api-sports.io\")\n",
    "\n",
    "    headers = {\n",
    "        'x-rapidapi-host': \"v3.football.api-sports.io\",\n",
    "        'x-rapidapi-key': \"a9cc039ebd059e2c63f6a40d741e82a8\"\n",
    "        }\n",
    "\n",
    "    conn.request(\"GET\", \"/fixtures/players?fixture={}\".format(fixture), headers=headers)\n",
    "\n",
    "    res = conn.getresponse()\n",
    "    data = res.read()\n",
    "\n",
    "    json_player_stats = json.loads(data.decode(\"utf-8\"))\n",
    "    df_player_stats = pd.DataFrame(json_player_stats['response'])\n",
    "        \n",
    "    # extract each player's data in various level and  them all into one table - player_stats_total\n",
    "\n",
    "    #  0 for home team 1 for away team\n",
    "    for i in [0,1]:\n",
    "                \n",
    "        try:\n",
    "            \n",
    "            # extract each player's data in various level\n",
    "            for nth_player in range(len(df_player_stats.loc[i,'players'])):\n",
    "                \n",
    "                team_id = df_player_stats.loc[i,'team']['id']\n",
    "                team_name = df_player_stats.loc[i,'team']['name']\n",
    "\n",
    "                player_id = df_player_stats.loc[i,'players'][nth_player]['player']['id']\n",
    "                player_name = df_player_stats.loc[i,'players'][nth_player]['player']['name']\n",
    "\n",
    "                position = df_player_stats.loc[i,'players'][nth_player]['statistics'][0]['games']['position']\n",
    "                mins_played = df_player_stats.loc[i,'players'][nth_player]['statistics'][0]['games']['minutes']\n",
    "                rating = df_player_stats.loc[i,'players'][nth_player]['statistics'][0]['games']['rating']\n",
    "                substitute = df_player_stats.loc[i,'players'][nth_player]['statistics'][0]['games']['substitute']\n",
    "\n",
    "                offsides = df_player_stats.loc[i,'players'][nth_player]['statistics'][0]['offsides']\n",
    "\n",
    "                shots_total = df_player_stats.loc[i,'players'][nth_player]['statistics'][0]['shots']['total']\n",
    "                shots_on = df_player_stats.loc[i,'players'][nth_player]['statistics'][0]['shots']['on']\n",
    "                try: \n",
    "                    shots_off = int(shots_total - shots_on)\n",
    "                except TypeError:\n",
    "                    shots_off = 0\n",
    "\n",
    "                goals = df_player_stats.loc[i,'players'][nth_player]['statistics'][0]['goals']['total']\n",
    "                assists = df_player_stats.loc[i,'players'][nth_player]['statistics'][0]['goals']['assists']\n",
    "                saves = df_player_stats.loc[i,'players'][nth_player]['statistics'][0]['goals']['saves']\n",
    "\n",
    "                passes_total = df_player_stats.loc[i,'players'][nth_player]['statistics'][0]['passes']['total']\n",
    "                passes_key = df_player_stats.loc[i,'players'][nth_player]['statistics'][0]['passes']['key']\n",
    "                passes_accuracy = df_player_stats.loc[i,'players'][nth_player]['statistics'][0]['passes']['accuracy']\n",
    "\n",
    "                tackles = df_player_stats.loc[i,'players'][nth_player]['statistics'][0]['tackles']['total']\n",
    "                blocks = df_player_stats.loc[i,'players'][nth_player]['statistics'][0]['tackles']['blocks']\n",
    "                interceptions = df_player_stats.loc[i,'players'][nth_player]['statistics'][0]['tackles']['interceptions']\n",
    "\n",
    "                duels_total= df_player_stats.loc[i,'players'][nth_player]['statistics'][0]['duels']['total']\n",
    "                duels_won = df_player_stats.loc[i,'players'][nth_player]['statistics'][0]['duels']['won']\n",
    "\n",
    "                dribble_attempt = df_player_stats.loc[i,'players'][nth_player]['statistics'][0]['dribbles']['attempts']\n",
    "                dribble_success = df_player_stats.loc[i,'players'][nth_player]['statistics'][0]['dribbles']['success']\n",
    "                dribble_past = df_player_stats.loc[i,'players'][nth_player]['statistics'][0]['dribbles']['past']\n",
    "\n",
    "                fouls_drawn = df_player_stats.loc[i,'players'][nth_player]['statistics'][0]['fouls']['drawn']\n",
    "                fouls_committed = df_player_stats.loc[i,'players'][nth_player]['statistics'][0]['fouls']['committed']\n",
    "\n",
    "                yellow_card = df_player_stats.loc[i,'players'][nth_player]['statistics'][0]['cards']['yellow']\n",
    "                red_card = df_player_stats.loc[i,'players'][nth_player]['statistics'][0]['cards']['red']\n",
    "\n",
    "                penalty_won = df_player_stats.loc[i,'players'][nth_player]['statistics'][0]['penalty']['won']\n",
    "\n",
    "\n",
    "                # append extracted data into the dataframe\n",
    "\n",
    "                player_stats_total = player_stats_total.append(pd.DataFrame\n",
    "                ({\n",
    "                'fixture_id':[fixture],\n",
    "                'team_id':[team_id],\n",
    "                'team_name':[team_name],\n",
    "\n",
    "                'player_id':[player_id],\n",
    "                'player_name':[player_name],\n",
    "\n",
    "                'position':[position],\n",
    "                'mins_played':[mins_played],\n",
    "                'rating':[rating],\n",
    "                'substitute':[substitute],\n",
    "\n",
    "                'offsides':[offsides],\n",
    "\n",
    "                'shots_total':[shots_total],\n",
    "                'shots_on':[shots_on],\n",
    "                'shots_off':[shots_off],\n",
    "\n",
    "                'goals':[goals],\n",
    "                'assists':[assists],\n",
    "                'saves':[saves],\n",
    "\n",
    "                'passes_total':[passes_total],\n",
    "                'passes_key':[passes_key],\n",
    "                'passes_accuracy':[passes_accuracy],\n",
    "\n",
    "                'tackles':[tackles],\n",
    "                'blocks':[blocks],\n",
    "                'interceptions':[interceptions],\n",
    "\n",
    "                'duels_total':[duels_total],\n",
    "                'duels_won':[duels_won],\n",
    "\n",
    "                'dribble_attempt':[dribble_attempt],\n",
    "                'dribble_success':[dribble_success],\n",
    "                'dribble_past':[dribble_past],\n",
    "\n",
    "                'fouls_drawn':[fouls_drawn],\n",
    "                'fouls_committed':[fouls_committed],\n",
    "\n",
    "                'yellow_card':[yellow_card],\n",
    "                'red_card':[red_card],\n",
    "\n",
    "                'penalty_won':[penalty_won]\n",
    "                }),ignore_index=True)\n",
    "\n",
    "        except KeyError:\n",
    "            if len(key_error_fixtures) < 10:\n",
    "                print(fixture)\n",
    "                key_error_fixtures = key_error_fixtures.append(pd.DataFrame({'fixture id with no data': [fixture]}),ignore_index=True)\n",
    "                break\n",
    "            else:\n",
    "                key_error_fixtures = key_error_fixtures.append(pd.DataFrame({'fixture id with no data': [fixture]}),ignore_index=True)\n",
    "                break\n",
    "            # if there is a fixture that causes a KeyError, print the id - max 10 id's - and add it to a separate dataframe\n",
    "            # a fixture that causes a KeyError doesn't contain player stats data even in API\n",
    "\n",
    "# change data type\n",
    "# can't convert None to integer using astype\n",
    "\n",
    "player_stats_total[['fixture_id','team_id', 'player_id']] = player_stats_total[['fixture_id','team_id', 'player_id']].astype(int)\n",
    "player_stats_total['substitute'] = player_stats_total['substitute'].astype(bool)\n",
    "\n",
    "numeric_columns = player_stats_total.loc[:,'offsides':'penalty_won'].columns.tolist()\n",
    "player_stats_total[numeric_columns] = player_stats_total[numeric_columns].fillna(0)\n",
    "\n",
    "# bring some more info from other dataframes on the fixtures with no data \n",
    "\n",
    "key_error_fixtures = pd.merge(left=key_error_fixtures, right=fixtures_goal, how='left', \\\n",
    "                              left_on='fixture id with no data', right_on='fixture_id')\n",
    "key_error_fixtures = pd.merge(left=key_error_fixtures, right=df_leagues, how='left', \\\n",
    "                              left_on='league_id', right_on='id')\n",
    "key_error_fixtures = key_error_fixtures[['fixture id with no data', 'league_id', 'name', 'country_name']]\n",
    "key_error_fixtures = key_error_fixtures.rename(columns={'name': 'league_name'})\n",
    "\n",
    "print(\"'player_stats_total' and 'key_error_fixtures' complete\")\n",
    "print(\"number of fixtures with no data: \", key_error_fixtures.shape[0])\n",
    "print(\"--- %s seconds ---\" % (time.time() - start_time))\n",
    "\n",
    "# use parameter encoding='utf-8-sig' to be able to display letters with accents etc with no error\n",
    "# csv must be converted into unicode text file again and then imported into sql (on truncation - ignore) in order to preserve players' name\n",
    "player_stats_total.to_csv('C:/coding/Python/practice/football_analysis/2nd analysis - underestimated players/player_stats_total.csv', index=False, encoding='utf-8-sig')\n",
    "key_error_fixtures.to_csv('C:/coding/Python/practice/football_analysis/2nd analysis - underestimated players/fixtures_no_data.csv', index=False, encoding='utf-8-sig')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "id": "ea0341f3",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>fixture_id</th>\n",
       "      <th>team_id</th>\n",
       "      <th>team_name</th>\n",
       "      <th>player_id</th>\n",
       "      <th>player_name</th>\n",
       "      <th>position</th>\n",
       "      <th>mins_played</th>\n",
       "      <th>rating</th>\n",
       "      <th>substitute</th>\n",
       "      <th>offsides</th>\n",
       "      <th>...</th>\n",
       "      <th>duels_total</th>\n",
       "      <th>duels_won</th>\n",
       "      <th>dribble_attempt</th>\n",
       "      <th>dribble_success</th>\n",
       "      <th>dribble_past</th>\n",
       "      <th>fouls_drawn</th>\n",
       "      <th>fouls_committed</th>\n",
       "      <th>yellow_card</th>\n",
       "      <th>red_card</th>\n",
       "      <th>penalty_won</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>710556</td>\n",
       "      <td>55</td>\n",
       "      <td>Brentford</td>\n",
       "      <td>19465</td>\n",
       "      <td>David Raya</td>\n",
       "      <td>G</td>\n",
       "      <td>90</td>\n",
       "      <td>7.9</td>\n",
       "      <td>False</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>710556</td>\n",
       "      <td>55</td>\n",
       "      <td>Brentford</td>\n",
       "      <td>1119</td>\n",
       "      <td>Kristoffer Ajer</td>\n",
       "      <td>D</td>\n",
       "      <td>71</td>\n",
       "      <td>6.6</td>\n",
       "      <td>False</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>4</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>710556</td>\n",
       "      <td>55</td>\n",
       "      <td>Brentford</td>\n",
       "      <td>19124</td>\n",
       "      <td>Pontus Jansson</td>\n",
       "      <td>D</td>\n",
       "      <td>90</td>\n",
       "      <td>7</td>\n",
       "      <td>False</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>710556</td>\n",
       "      <td>55</td>\n",
       "      <td>Brentford</td>\n",
       "      <td>19789</td>\n",
       "      <td>Ethan Pinnock</td>\n",
       "      <td>D</td>\n",
       "      <td>90</td>\n",
       "      <td>7.3</td>\n",
       "      <td>False</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>10</td>\n",
       "      <td>5</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>710556</td>\n",
       "      <td>55</td>\n",
       "      <td>Brentford</td>\n",
       "      <td>19352</td>\n",
       "      <td>Sergi CanÃ³s</td>\n",
       "      <td>M</td>\n",
       "      <td>90</td>\n",
       "      <td>8.6</td>\n",
       "      <td>False</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>8</td>\n",
       "      <td>7</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>206293</th>\n",
       "      <td>862970</td>\n",
       "      <td>1080</td>\n",
       "      <td>Orenburg</td>\n",
       "      <td>119207</td>\n",
       "      <td>Artem Shabolin</td>\n",
       "      <td>M</td>\n",
       "      <td>None</td>\n",
       "      <td>None</td>\n",
       "      <td>True</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>206294</th>\n",
       "      <td>862970</td>\n",
       "      <td>1080</td>\n",
       "      <td>Orenburg</td>\n",
       "      <td>43499</td>\n",
       "      <td>Nikolai Prudnikov</td>\n",
       "      <td>F</td>\n",
       "      <td>None</td>\n",
       "      <td>None</td>\n",
       "      <td>True</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>206295</th>\n",
       "      <td>862970</td>\n",
       "      <td>1080</td>\n",
       "      <td>Orenburg</td>\n",
       "      <td>131571</td>\n",
       "      <td>Nikolay Titkov</td>\n",
       "      <td>M</td>\n",
       "      <td>21</td>\n",
       "      <td>6.6</td>\n",
       "      <td>True</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>6</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>206296</th>\n",
       "      <td>862970</td>\n",
       "      <td>1080</td>\n",
       "      <td>Orenburg</td>\n",
       "      <td>43590</td>\n",
       "      <td>Arshak Koryan</td>\n",
       "      <td>F</td>\n",
       "      <td>16</td>\n",
       "      <td>6.7</td>\n",
       "      <td>True</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>206297</th>\n",
       "      <td>862970</td>\n",
       "      <td>1080</td>\n",
       "      <td>Orenburg</td>\n",
       "      <td>284056</td>\n",
       "      <td>Vladimir Sychevoy</td>\n",
       "      <td>F</td>\n",
       "      <td>15</td>\n",
       "      <td>6.6</td>\n",
       "      <td>True</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>206298 rows Ã— 32 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "        fixture_id  team_id  team_name  player_id        player_name position  \\\n",
       "0           710556       55  Brentford      19465         David Raya        G   \n",
       "1           710556       55  Brentford       1119    Kristoffer Ajer        D   \n",
       "2           710556       55  Brentford      19124     Pontus Jansson        D   \n",
       "3           710556       55  Brentford      19789      Ethan Pinnock        D   \n",
       "4           710556       55  Brentford      19352        Sergi CanÃ³s        M   \n",
       "...            ...      ...        ...        ...                ...      ...   \n",
       "206293      862970     1080   Orenburg     119207     Artem Shabolin        M   \n",
       "206294      862970     1080   Orenburg      43499  Nikolai Prudnikov        F   \n",
       "206295      862970     1080   Orenburg     131571     Nikolay Titkov        M   \n",
       "206296      862970     1080   Orenburg      43590      Arshak Koryan        F   \n",
       "206297      862970     1080   Orenburg     284056  Vladimir Sychevoy        F   \n",
       "\n",
       "       mins_played rating  substitute  offsides  ...  duels_total  duels_won  \\\n",
       "0               90    7.9       False         0  ...            1          1   \n",
       "1               71    6.6       False         0  ...            4          2   \n",
       "2               90      7       False         0  ...            1          0   \n",
       "3               90    7.3       False         0  ...           10          5   \n",
       "4               90    8.6       False         0  ...            8          7   \n",
       "...            ...    ...         ...       ...  ...          ...        ...   \n",
       "206293        None   None        True         0  ...            0          0   \n",
       "206294        None   None        True         0  ...            0          0   \n",
       "206295          21    6.6        True         0  ...            6          3   \n",
       "206296          16    6.7        True         0  ...            1          1   \n",
       "206297          15    6.6        True         0  ...            2          1   \n",
       "\n",
       "        dribble_attempt  dribble_success  dribble_past  fouls_drawn  \\\n",
       "0                     0                0             0            0   \n",
       "1                     1                1             0            0   \n",
       "2                     0                0             0            0   \n",
       "3                     1                1             2            1   \n",
       "4                     0                0             1            0   \n",
       "...                 ...              ...           ...          ...   \n",
       "206293                0                0             0            0   \n",
       "206294                0                0             0            0   \n",
       "206295                1                0             0            0   \n",
       "206296                0                0             0            0   \n",
       "206297                0                0             0            0   \n",
       "\n",
       "        fouls_committed  yellow_card red_card  penalty_won  \n",
       "0                     0            0        0            0  \n",
       "1                     0            0        0            0  \n",
       "2                     0            0        0            0  \n",
       "3                     0            0        0            0  \n",
       "4                     0            0        0            0  \n",
       "...                 ...          ...      ...          ...  \n",
       "206293                0            0        0            0  \n",
       "206294                0            0        0            0  \n",
       "206295                1            1        0            0  \n",
       "206296                0            0        0            0  \n",
       "206297                0            0        0            0  \n",
       "\n",
       "[206298 rows x 32 columns]"
      ]
     },
     "execution_count": 55,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "player_stats_total"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "id": "9745cc5a",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>fixture id with no data</th>\n",
       "      <th>league_id</th>\n",
       "      <th>league_name</th>\n",
       "      <th>country_name</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>862066</td>\n",
       "      <td>62</td>\n",
       "      <td>Ligue 2</td>\n",
       "      <td>France</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>862298</td>\n",
       "      <td>62</td>\n",
       "      <td>Ligue 2</td>\n",
       "      <td>France</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>717925</td>\n",
       "      <td>219</td>\n",
       "      <td>Erste Liga</td>\n",
       "      <td>Austria</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>717926</td>\n",
       "      <td>219</td>\n",
       "      <td>Erste Liga</td>\n",
       "      <td>Austria</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>717927</td>\n",
       "      <td>219</td>\n",
       "      <td>Erste Liga</td>\n",
       "      <td>Austria</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>213</th>\n",
       "      <td>860848</td>\n",
       "      <td>179</td>\n",
       "      <td>Premiership</td>\n",
       "      <td>Scotland</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>214</th>\n",
       "      <td>861284</td>\n",
       "      <td>179</td>\n",
       "      <td>Premiership</td>\n",
       "      <td>Scotland</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>215</th>\n",
       "      <td>861285</td>\n",
       "      <td>179</td>\n",
       "      <td>Premiership</td>\n",
       "      <td>Scotland</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>216</th>\n",
       "      <td>861998</td>\n",
       "      <td>179</td>\n",
       "      <td>Premiership</td>\n",
       "      <td>Scotland</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>217</th>\n",
       "      <td>861999</td>\n",
       "      <td>179</td>\n",
       "      <td>Premiership</td>\n",
       "      <td>Scotland</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>218 rows Ã— 4 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     fixture id with no data  league_id  league_name country_name\n",
       "0                     862066         62      Ligue 2       France\n",
       "1                     862298         62      Ligue 2       France\n",
       "2                     717925        219   Erste Liga      Austria\n",
       "3                     717926        219   Erste Liga      Austria\n",
       "4                     717927        219   Erste Liga      Austria\n",
       "..                       ...        ...          ...          ...\n",
       "213                   860848        179  Premiership     Scotland\n",
       "214                   861284        179  Premiership     Scotland\n",
       "215                   861285        179  Premiership     Scotland\n",
       "216                   861998        179  Premiership     Scotland\n",
       "217                   861999        179  Premiership     Scotland\n",
       "\n",
       "[218 rows x 4 columns]"
      ]
     },
     "execution_count": 56,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "key_error_fixtures"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
